1: What's the most expensive listing? What else can you tell me about the listing?

- There are three listings that are equally 'most' expensive. Each of these have a price of $10,000. Two of these listings
market themselves as close to Downtown Austin. One of them says that a personal chef and driver is available. Of these three,
the most recent host has been hosting since March, 2016 and the longest host started in October, 2014. One host says that they
have designed their location to be like a cathedral, a place of, "refuge, beauty, and joy."

WITH maximum AS (
	SELECT 
		MAX(CAST(SUBSTR(REPLACE(price, ',', ''),2)AS DECIMAL)) AS max_price
	FROM 
		listings
)

SELECT 
	*
FROM 
	listings,
	maximum
WHERE 
	(CAST(SUBSTR(REPLACE(price, ',', ''),2)AS DECIMAL)) = maximum.max_price
	
2: What neighborhoods seem to be the most popular?

-- Here I grouped by the IDs from the calendar table and counted how many times they were not available or had an 'f' under 
available. This gave me the number of times that each ID listing for a house wasn't available. 

SELECT 
	listing_id,
	available,
	count(*) AS not_available
FROM 
	calendar
WHERE 
	available = 'f'
GROUP BY listing_id
ORDER BY not_available

-- Here I selected the number for each neighbourhood, called the neighbourhood_cleansed. I then grouped by these neighbourhoods
and counted how many listings there were for each neighbourhood. I called it neighbourhood_listings because it tells me the 
number of listings for each neighbourhood. 

SELECT 
	neighbourhood_cleansed,
	count(*) AS neighbourhood_listings
FROM 
	listings
GROUP BY
	neighbourhood_cleansed
ORDER BY neighbourhood_listings

	
-- Here I took the listing_id and not_available and put it into an 'empty' sub-table. I then selected the listing_id and 
not_available and I joined it to the ID column from the listings table.

WITH empty AS (
	SELECT 
		listing_id,
		available,
		count(*) AS not_available
	FROM 
		calendar
	WHERE 
		available = 'f'
	GROUP BY listing_id
)

SELECT 
	listing_id,
	not_available
FROM 
	empty
JOIN 
	listings
ON
	empty.listing_id = listings.id
	
	
-- Now for each ID I wanted to select its corresponding 'neighbourhood_cleansed' number. 

WITH empty AS (
	SELECT 
		listing_id,
		available,
		count(*) AS not_available
	FROM 
		calendar
	WHERE 
		available = 'f'
	GROUP BY listing_id
)

SELECT 
	listing_id,
	not_available,
	listings.neighbourhood_cleansed
FROM 
	empty
JOIN 
	listings
ON
	empty.listing_id = listings.id


-- Now I am grouping by the neighbourhood_cleansed number so that I can count the number of listings for each neighbourhood
and also sum the number of not_available times for each neighbourhood. I also renamed the neighbourhood_cleansed to zip_code
because that is essentially what that number is. My question is how do I divide the neighbourhood_listings by the sum of the 
not_available listings for each neighbourhood? I'm confused about how SQL allows me to divide those two numbers. 

WITH empty AS (
	SELECT 
		listing_id,
		available,
		count(*) AS not_available
	FROM 
		calendar
	WHERE 
		available = 'f'
	GROUP BY listing_id
)

SELECT 
	listings.neighbourhood_cleansed AS zip_code,
	count(*) AS neighbourhood_listings,
	SUM(not_available)
FROM 
	empty
JOIN 
	listings
ON
	empty.listing_id = listings.id
GROUP BY
	neighbourhood_cleansed


3: What time of year is the cheapest time to go to your city? What about the busiest?

-- It appears that March is the cheapest time of year in Austin. 
SELECT 
	date,
	AVG(CAST(SUBSTR(REPLACE(price, ',', ''),2)AS DECIMAL)) AS average_price
FROM 
	calendar
GROUP BY date
ORDER BY average_price

-- It appears that March is also the time of year with the highest unavailability. 
SELECT 
	date,
	available,
	count(*) AS not_available
FROM 
	calendar
WHERE 
	available = 'f'
GROUP BY date
ORDER BY not_available DESC 

